name: Deploy on QA

on:
  # trigger the action when we push to the main branch
  push:
    branches: [ "main" ]
  #  this line adds a manual trigger option for our workflow (Run a workflow button)
  workflow_dispatch: 

jobs:
  # job name 
  deploy_on_qa:
    # OS
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v4

      - name: Create Customer Env file
        working-directory: ./customer
        # .cat - display the contents of the .env file in the terminal
        run: |
          touch .env
          echo APP_SECRET=${{ secrets.QA_APP_SECRET }} >> .env
          echo MONGODB_URI=${{ secrets.QA_CUSTOMER_DB_URL }} >> .env
          echo MESSAGE_BROKER_URL=${{ secrets.QA_MESSAGE_BROKER_URL }} >> .env
          echo PORT=8001 >> .env
          cat .env
          
      - name: Create Products Env file
        working-directory: ./products
        # .cat - display the contents of the .env file in the terminal
        run: |
          touch .env
          echo APP_SECRET=${{ secrets.QA_APP_SECRET }} >> .env
          echo MONGODB_URI=${{ secrets.QA_PRODUCTS_DB_URL }} >> .env
          echo MESSAGE_BROKER_URL=${{ secrets.QA_MESSAGE_BROKER_URL }} >> .env
          echo PORT=8002 >> .env
          cat .env
            
      - name: Create Shopping Env file
        working-directory: ./shopping
        # .cat - display the contents of the .env file in the terminal
        run: |
          touch .env
          echo APP_SECRET=${{ secrets.QA_APP_SECRET }} >> .env
          echo MONGODB_URI=${{ secrets.QA_SHOPPING_DB_URL }} >> .env
          echo MESSAGE_BROKER_URL=${{ secrets.QA_MESSAGE_BROKER_URL }} >> .env
          echo PORT=8003 >> .env
          cat .env

   
      - name: Generate deployment package
        # zip - create a zip archive
        # -r - recursive (include directories and their contents)
        # deploy.zip - name of the archive
        # -x '*.git*' - -x stands for exclude and then the pattern (.git , git/ ...)
        run: |
          zip -r deploy.zip . -x '*.git*'

      - name: Deploy on Elastic Beanstalk QA Env
        uses: einaregilsson/beanstalk-deploy@v22
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: "microservices-node-js-tutorial-cicd"
          environment_name: "Microservices-node-js-tutorial-c-env"
          version_label: "ver-${{ github.sha }}"
          region: eu-west-3
          deployment_package: deploy.zip
          
      
